import type { SizeWithUnit } from "./Common";
import { Color, NumberWithUnit, SizeWithUnitAndAspect } from "./Common";
import type { AimerViewfinderJSON, LaserlineViewfinderStyle, LaserlineViewfinderStyleJSON, RectangularViewfinderAnimation, RectangularViewfinderJSON, RectangularViewfinderLineStyle, RectangularViewfinderStyle } from "./Viewfinder+related";
import type { Serializable } from "./private/Serializable";
export interface BrushJSON {
    fill: {
        color: string;
    };
    stroke: {
        color: string;
        width: number;
    };
}
export declare class Brush implements Serializable<BrushJSON> {
    private readonly fill;
    private readonly stroke;
    static get transparent(): Brush;
    get fillColor(): Color;
    get strokeColor(): Color;
    get strokeWidth(): number;
    constructor();
    constructor(fillColor: Color, strokeColor: Color, strokeWidth: number);
    toJSONObject(): BrushJSON;
}
export interface Viewfinder extends Serializable {
    toJSONObject: () => any;
}
export declare const NoViewfinder: {
    type: string;
};
export declare class LaserlineViewfinder implements Serializable<LaserlineViewfinderStyleJSON>, Viewfinder {
    private readonly type;
    private readonly _style;
    width: NumberWithUnit;
    enabledColor: Color;
    disabledColor: Color;
    constructor();
    constructor(style: LaserlineViewfinderStyle);
    get style(): LaserlineViewfinderStyle;
    toJSONObject(): LaserlineViewfinderStyleJSON;
}
export declare class RectangularViewfinder implements Viewfinder, Serializable<RectangularViewfinderJSON> {
    private readonly type;
    private readonly _style;
    private readonly _lineStyle;
    private _dimming;
    private _animation;
    private _sizeWithUnitAndAspect;
    color: Color;
    get sizeWithUnitAndAspect(): SizeWithUnitAndAspect;
    constructor();
    constructor(style: RectangularViewfinderStyle);
    constructor(style: RectangularViewfinderStyle, lineStyle: RectangularViewfinderLineStyle);
    get style(): RectangularViewfinderStyle;
    get lineStyle(): RectangularViewfinderLineStyle;
    get dimming(): number;
    set dimming(value: number);
    get animation(): RectangularViewfinderAnimation | null;
    set animation(animation: RectangularViewfinderAnimation | null);
    setSize(size: SizeWithUnit): void;
    setWidthAndAspectRatio(width: NumberWithUnit, heightToWidthAspectRatio: number): void;
    setHeightAndAspectRatio(height: NumberWithUnit, widthToHeightAspectRatio: number): void;
    setShorterDimensionAndAspectRatio(fraction: number, aspectRatio: number): void;
    toJSONObject(): RectangularViewfinderJSON;
}
export declare class AimerViewfinder implements Viewfinder, Serializable<AimerViewfinderJSON> {
    private readonly type;
    frameColor: Color;
    dotColor: Color;
    constructor();
    toJSONObject(): AimerViewfinderJSON;
}
