import type { DataCaptureContext } from "./DataCaptureContext";
import type { FrameSource } from ".";
export interface DataCaptureContextListener {
    didChangeStatus?: (context: DataCaptureContext, contextStatus: ContextStatus) => void;
    didStartObservingContext?: (context: DataCaptureContext) => void;
    didChangeFrameSource?: (context: DataCaptureContext, frameSource: FrameSource | null) => void;
}
export interface ContextStatusJSON {
    code: number;
    isValid: boolean;
    message: string;
}
export declare class ContextStatus {
    private _message;
    private _code;
    private _isValid;
    private static fromJSON;
    get message(): string;
    get code(): number;
    get isValid(): boolean;
}
export declare enum PrivateMirrorAxis {
    None = "None",
    X = "X",
    Y = "Y"
}
